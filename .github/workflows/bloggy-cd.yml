name: Bloggy Server CD

on:
  push:
    branches:
      - 'dev'
  pull_request:
    branches:
      - 'dev'

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      working-directory: ./
      APPLICATION: ${{secrets.APPLICATION}}

    steps:
      - name: Get Code from Repository
        uses: actions/checkout@v3
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          submodules: true

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle' # Here we enable caching for Gradle

      - uses: actions/checkout@v2
      - run: touch ./src/main/resources/application.yml
      - run: echo "${{env.APPLICATION}}" > ./src/main/resources/application.yml
      - uses: actions/upload-artifact@v2
        with:
          name: application.yml
          path: ./src/main/resources/application.yml

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
          cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/develop' }}

      - name: Execute Gradle build
        run: ./gradlew clean build -x test #-Pprofile=sns #application 프로필 이름

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}

      - name: build and release to DockerHub
        env:
          NAME: "gon109"
          APP: "bloggy"
        run: |
          docker build -t $NAME/$APP -f ./Dockerfile . 
          docker push $NAME/$APP:latest

      - name: Copy docker-compose.yml to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{secrets.SERVER_HOST}}
          username: ubuntu
          key: ${{secrets.BLOGGY_KEY}}
          source: "./docker-compose.yml"
          target: "/home/ubuntu"

      - name: Check file on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.SERVER_HOST}}
          username: ubuntu
          key: ${{secrets.BLOGGY_KEY}}
          script: ls -l /home/ubuntu && cat /home/ubuntu/docker-compose.yml

      - name: EC2 Docker Run
        uses: appleboy/ssh-action@master
        env:
          NAME: "gon109"
          APP: "bloggy"
        with:
          username: ubuntu
          host: ${{secrets.SERVER_HOST}}
          key: ${{secrets.BLOGGY_KEY}}
          envs: APP, NAME
          script_stop: true
          script: |
            echo "NAME: $NAME, APP: $APP"
            sudo docker-compose -f /home/ubuntu/docker-compose.yml down --rmi all
            sudo docker pull $NAME/$APP:latest
            sudo docker-compose -f /home/ubuntu/docker-compose.yml up -d
